Script started on trešdiena, 2018. gada 10. oktobris, plkst. 23 un 21
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ kill -9 8677.[Ktop[K[K[K[Kscrup[K[Kipt.test.j[K[K
script.test: command not found
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ script.test.js
script.test.js: command not found
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ script.test.js[K[K[K[K[K[K[K[K[K[K[K[K[K[Ktest
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ jest
No command 'jest' found, did you mean:
 Command 'test' from package 'coreutils' (main)
jest: command not found
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ te[K[Knpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    TypeError: Class constructor InsuranceCompany cannot be invoked without 'new'
[2m[22m
[2m    [0m [90m 11 | [39m[0m[22m
[2m    [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 13 | [39m	[36mvar[39m zz [33m=[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 14 | [39m	expect(zz[33m.[39mname)[33m.[39mtoBe([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.InsuranceCompany ([2m[0m[36mscript.test.js[39m[0m[2m:13:18)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.402s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (11ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (11ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m"a"[39m
    Received: [31mundefined[39m

    Difference:

      Comparing two different types of values. Expected [32mstring[39m but received [31mundefined[39m.
[2m[22m
[2m    [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 13 | [39m	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 14 | [39m	expect(zz[33m.[39mname)[33m.[39mtoBe([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m    [0m [90m 17 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:14:18)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.291s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (12ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mempty company name toBeUndefined (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m"a"[39m
    Received: [31mundefined[39m

    Difference:

      Comparing two different types of values. Expected [32mstring[39m but received [31mundefined[39m.
[2m[22m
[2m    [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 13 | [39m	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 14 | [39m	expect(zz[33m.[39mname)[33m.[39mtoBe([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m    [0m [90m 17 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.t[39m[0m[22m
[2m    [0m [90m    | [39m	           [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 36 | [39m	expect(risk[33m.[39mname)[33m.[39mtoBe([32m'fire'[39m)[0m[22m
[2m    [0m [90m 37 | [39m})[0m[22m
[2m    [0m [90m 38 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.<anonymous>.test ([2m[0m[36mscript.test.js[39m[0m[2m:35:13)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m2 failed[39m[22m, 2 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.317s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest


[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (12ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m"a"[39m
    Received: [31mundefined[39m

    Difference:

      Comparing two different types of values. Expected [32mstring[39m but received [31mundefined[39m.
[2m[22m
[2m    [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 13 | [39m	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 14 | [39m	expect(zz[33m.[39mname)[33m.[39mtoBe([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m    [0m [90m 17 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:14:18)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.007s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    TypeError: zz.name is not a function
[2m[22m
[2m    [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 13 | [39m	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 14 | [39m	expect(zz[33m.[39mname())[33m.[39mtoBe([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	          [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m    [0m [90m 17 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.name ([2m[0m[36mscript.test.js[39m[0m[2m:14:12)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.326s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (14:25)

      [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {
       [90m 13 | [39m	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m
      [31m[1m>[22m[39m[90m 14 | [39m	expect(zz[33m.[39mname[33m.[39mtoBe([32m'a'[39m)[33m;[39m
       [90m    | [39m	                        [31m[1m^[22m[39m
       [90m 15 | [39m})
       [90m 16 | [39m
       [90m 17 | [39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.165s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
ore details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (15:0)

      [0m [90m 13 | [39m	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m
       [90m 14 | [39m	expect(zz[33m.[39mname[33m.[39mtoBe([32m'a'[39m)
      [31m[1m>[22m[39m[90m 15 | [39m})
       [90m    | [39m[31m[1m^[22m[39m
       [90m 16 | [39m
       [90m 17 | [39m
       [90m 18 | [39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.17s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (15:0)

      [0m [90m 13 | [39m	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m
       [90m 14 | [39m	expect(zz[33m.[39mname[33m.[39mtoBe([32m'a'[39m)
      [31m[1m>[22m[39m[90m 15 | [39m})[33m;[39m
       [90m    | [39m[31m[1m^[22m[39m
       [90m 16 | [39m
       [90m 17 | [39m
       [90m 18 | [39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.163s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    TypeError: Cannot read property 'toBe' of undefined
[2m[22m
[2m    [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 13 | [39m	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 14 | [39m	expect(zz[33m.[39mname[33m.[39mtoBe([32m'a'[39m))[0m[22m
[2m    [0m [90m    | [39m	               [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m    [0m [90m 17 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:14:17)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.311s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test[4Pjestnpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    TypeError: Cannot read property 'toBe' of undefined
[2m[22m
[2m    [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 13 | [39m	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 14 | [39m	expect((zz[33m.[39mname)[33m.[39mtoBe([32m'a'[39m))[0m[22m
[2m    [0m [90m    | [39m	                 [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m    [0m [90m 17 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:14:19)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.433s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (13ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A	[36mvar[39m zz [33m=[39m [36mnew[39m script[33m.[39m[33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 14 | [39m	expect(zz[33m.[39mname)[33m.[39mtoBe([32m'a'[39m)[0m[22m
[2m    [0m [90m    | [39m	                [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m    [0m [90m 17 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:14:18)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.3s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    ReferenceError: InsuranceCompany is not defined
[2m[22m
[2m    [0m [90m 12 | [39m[0m[22m
[2m    [0m [90m 13 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 14 | [39m	 zz [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	 [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 15 | [39m	expect(zz[33m.[39mname)[33m.[39mtoBe([32m'a'[39m)[0m[22m
[2m    [0m [90m 16 | [39m})[0m[22m
[2m    [0m [90m 17 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.zz ([2m[0m[36mscript.test.js[39m[0m[2m:14:3)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.317s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    ReferenceError: InsuranceCompany is not defined
[2m[22m
[2m    [0m [90m 12 | [39m[0m[22m
[2m    [0m [90m 13 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 14 | [39m	let zz [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 15 | [39m	expect(zz[33m.[39mname)[33m.[39mtoBe([32m'a'[39m)[0m[22m
[2m    [0m [90m 16 | [39m})[0m[22m
[2m    [0m [90m 17 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.<anonymous>.test ([2m[0m[36mscript.test.js[39m[0m[2m:14:11)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.312s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    ReferenceError: InsuranceCompany is not defined
[2m[22m
[2m    [0m [90m 11 | [39m[0m[22m
[2m    [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 13 | [39m	 zz [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	 [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 14 | [39m	expect(zz[33m.[39m_name)[33m.[39mtoBe([32m'a'[39m)[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.zz ([2m[0m[36mscript.test.js[39m[0m[2m:13:3)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.318s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    ReferenceError: InsuranceCompany is not defined
[2m[22m
[2m    [0m [90m 11 | [39m[0m[22m
[2m    [0m [90m 12 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 13 | [39m	let zz [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 14 | [39m	expect(zz[33m.[39m_name)[33m.[39mtoBe([32m'a'[39m)[0m[22m
[2m    [0m [90m 15 | [39m})[0m[22m
[2m    [0m [90m 16 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.<anonymous>.test ([2m[0m[36mscript.test.js[39m[0m[2m:13:11)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.309s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    ReferenceError: InsuranceCompany is not defined

    [0m [90m 1 | [39m[0m
    [0m[31m[1m>[22m[39m[90m 2 | [39mlet zz [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m
    [0m [90m   | [39m         [31m[1m^[22m[39m[0m
    [0m [90m 3 | [39m[0m
    [0m [90m 4 | [39m[36mconst[39m script [33m=[39m require([32m'./script.js'[39m)[33m;[39m[0m
    [0m [90m 5 | [39m[0m

      [2mat Object.<anonymous> ([22m[0m[36mscript.test.js[39m[0m[2m:2:10)[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.302s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^Mnpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    ReferenceError: InsuranceCompany is not defined

    [0m [90m 1 | [39m[0m
    [0m[31m[1m>[22m[39m[90m 2 | [39mlet zz [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m
    [0m [90m   | [39m         [31m[1m^[22m[39m[0m
    [0m [90m 3 | [39m[0m
    [0m [90m 4 | [39m[36mconst[39m script [33m=[39m require([32m'./script'[39m)[33m;[39m[0m
    [0m [90m 5 | [39m[0m

      [2mat Object.<anonymous> ([22m[0m[36mscript.test.js[39m[0m[2m:2:10)[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.306s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    ReferenceError: InsuranceCompany is not defined

    [0m [90m 1 | [39m[0m
    [0m[31m[1m>[22m[39m[90m 2 | [39mlet zz [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m
    [0m [90m   | [39m         [31m[1m^[22m[39m[0m
    [0m [90m 3 | [39m[0m
    [0m [90m 4 | [39m[36mconst[39m script [33m=[39m require([32m'./script'[39m)[33m;[39m[0m
    [0m [90m 5 | [39m[0m

      [2mat Object.<anonymous> ([22m[0m[36mscript.test.js[39m[0m[2m:2:10)[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.278s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    ReferenceError: InsuranceCompany is not defined

    [0m [90m 1 | [39m[0m
    [0m[31m[1m>[22m[39m[90m 2 | [39mlet zz [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m
    [0m [90m   | [39m         [31m[1m^[22m[39m[0m
    [0m [90m 3 | [39m[0m
    [0m [90m 4 | [39m[36mconst[39m script [33m=[39m require([32m'./script'[39m)[33m;[39m[0m
    [0m [90m 5 | [39m[0m

      [2mat Object.<anonymous> ([22m[0m[36mscript.test.js[39m[0m[2m:2:10)[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.278s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscriptok-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to set[39m[22m

    ReferenceError: InsuranceCompany is not defined
[2m[22m
[2m    [0m [90m 13 | [39m[0m[22m
[2m    [0m [90m 14 | [39mtest([32m'company name is possible to set'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 15 | [39m	let zz [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'a'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 16 | [39m	expect(zz[33m.[39m_name)[33m.[39mtoEqual([32m'a'[39m)[0m[22m
[2m    [0m [90m 17 | [39m})[0m[22m
[2m    [0m [90m 18 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.<anonymous>.test ([2m[0m[36mscript.test.js[39m[0m[2m:15:11)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.301s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany name is possible to set (6ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m1 passed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.277s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mcompany name is possible to set (15ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mcompany name is possible to sm.[39mtoEqual([32m'ab'[39m)[0m[22m
[2m    [0m [90m    | [39m	                 [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 18 | [39m})[0m[22m
[2m    [0m [90m 19 | [39m[0m[22m
[2m    [0m [90m 20 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toEqual ([2m[0m[36mscript.test.js[39m[0m[2m:17:19)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.32s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany name is possible to set (6ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m1 passed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.364s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany name is possible to set (6ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mempty company name toBeUndefined (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m2 passed[39m[22m, 2 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.28s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany name is possible to set (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m1 passed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.287s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mis possible to set insurance company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m1 passed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.317s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mis possible to set insurance company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m1 passed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.305s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mis possible to set insurance company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mis possible to get insurance company name (6ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mis possible to get insurance company name[39m[22m

    TypeError: copmanyInstance._name is not a function
[2m[22m
[2m    [0m [90m 17 | [39mtest([32m'is possible to get insurance company name'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 18 | [39m	let copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'abc'[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 19 | [39m	expect(copmanyInstance[33m.[39m_name())[33m.[39mtoEqual([32m'abc'[39m)[0m[22m
[2m    [0m [90m    | [39m	                       [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 20 | [39m})[0m[22m
[2m    [0m [90m 21 | [39m[0m[22m
[2m    [0m [90m 22 | [39m[0m[22m
[2m[22m
[2m      [2mat Object._name ([2m[0m[36mscript.test.js[39m[0m[2m:19:25)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m1 passed[39m[22m, 2 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.419s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[A
[A: command not found
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (20:0)

      [0m [90m 18 | [39m	let copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'abc'[39m)[33m;[39m
       [90m 19 | [39m	expect(copmanyInstance[33m.[39mget_name[33m.[39mtoEqual([32m'abc'[39m)
      [31m[1m>[22m[39m[90m 20 | [39m})
       [90m    | [39m[31m[1m^[22m[39m
       [90m 21 | [39m
       [90m 22 | [39m
       [90m 23 | [39m[90m/*[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.191s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (20:0)

      [0m [90m 18 | [39m	let copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'abc'[39m)[33m;[39m
       [90m 19 | [39m	expect((copmanyInstance[33m.[39mget_name)[33m.[39mtoEqual([32m'abc'[39m)
      [31m[1m>[22m[39m[90m 20 | [39m})
       [90m    | [39m[31m[1m^[22m[39m
       [90m 21 | [39m
       [90m 22 | [39m
       [90m 23 | [39m[90m/*[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.156s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ~npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (20:0)

      [0m [90m 18 | [39m	let copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'abc'[39m)[33m;[39m
       [90m 19 | [39m	expect((copmanyInstance[33m.[39mgetname)[33m.[39mtoEqual([32m'abc'[39m)
      [31m[1m>[22m[39m[90m 20 | [39m})
       [90m    | [39m[31m[1m^[22m[39m
       [90m 21 | [39m
       [90m 22 | [39m
       [90m 23 | [39m[90m/*[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.181s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (19:49)

      [0m [90m 17 | [39mtest([32m'is possible to get insurance company name'[39m[33m,[39m() [33m=>[39m {
       [90m 18 | [39m	let copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'abc'[39m)[33m;[39m
      [31m[1m>[22m[39m[90m 19 | [39m	expect((copmanyInstance[33m.[39mget_name)[33m.[39mtoEqual([32m'abc'[39m)[33m;[39m
       [90m    | [39m	                                                [31m[1m^[22m[39m
       [90m 20 | [39m})
       [90m 21 | [39m
       [90m 22 | [39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.198s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (20:0)

      [0m [90m 18 | [39m	let copmanyInstance [33m=[39m [36mnew[39m es to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (20:0)

      [0m [90m 18 | [39m	let copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'abc'[39m)[33m;[39m
       [90m 19 | [39m	expect((copmanyInstance[33m.[39mget_name)[33m.[39mtoEqual([32m'abc'[39m)
      [31m[1m>[22m[39m[90m 20 | [39m})
       [90m    | [39m[31m[1m^[22m[39m
       [90m 21 | [39m
       [90m 22 | [39m
       [90m 23 | [39m[90m/*[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.14s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token, expected , (13:0)

      [0m [90m 11 | [39m	let copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m()[33m;[39m
       [90m 12 | [39m	expect((copmanyInstance[33m.[39mname)[33m.[39mtoEqual([32m'If'[39m)
      [31m[1m>[22m[39m[90m 13 | [39m})
       [90m    | [39m[31m[1m^[22m[39m
       [90m 14 | [39m
       [90m 15 | [39m
       [90m 16 | [39m[90m/*[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.146s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mis possible to get constant company name (8ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mis possible to get constant company name[39m[22m

    TypeError: copmanyInstance.name.toEqual is not a function
[2m[22m
[2m    [0m [90m 10 | [39mtest([32m'is possible to get constant company name'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [9js[39m[0m[2m:12:32)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.395s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mis possible to get constant company name (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mis possible to get constant company name[39m[22m

    TypeError: copmanyInstance.name.toBe is not a function
[2m[22m
[2m    [0m [90m 10 | [39mtest([32m'is possible to get constant company name'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 11 | [39m	let copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m()[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 12 | [39m	expect((copmanyInstance[33m.[39mname)[33m.[39mtoBe([32m'If'[39m))[0m[22m
[2m    [0m [90m    | [39m	                              [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 13 | [39m})[0m[22m
[2m    [0m [90m 14 | [39m[0m[22m
[2m    [0m [90m 15 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:12:32)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.281s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mis possible to get constant company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m1 passed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.461s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m1 passed[39m[22m, 1 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.461s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (9ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m2 passed[39m[22m, 2 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m12.465s[39m[22m
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (8ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mrisk get name (8ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mrisk get price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mrisk get name[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m"fire"[39m
    Received: [31mundefined[39m

    Difference:

      Comparing two different types of values. Expected [32mstring[39m but received [31mundefined[39m.
[2m[22m
[2m    [0m [90m 26 | [39mtest([32m'risk get name'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 27 | [39m	let riskInstance [33m=[39m [36mnew[39m [33mRisk[39m([32m'fire'[39m[33m,[39m[35m150[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 28 | [39m	expect([33mRisk[39m[33m.[39mgetName)[33m.[39mtoBe([32m'fire'[39m)[0m[22m
[2m    [0m [90m    | [39m	                     [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 29 | [39m})[0m[22m
[2m    [0m [90m 30 | [39m[0m[22m
[2m    [0m [90m 31 | [39mtest([32m'risk get price'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:28:23)[2m[22m

[1m[31m  [1m● [1mrisk get price[39m[22m

    TypeError: Risk.yearlyPrice is not a fu  [0m [90m 35 | [39m[0m[22m
[2m    [0m [90m 36 | [39m[90m/*[39m[0m[22m
[2m[22m
[2m      [2mat Object.yearlyPrice ([2m[0m[36mscript.test.js[39m[0m[2m:33:14)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m2 failed[39m[22m, [1m[32m3 passed[39m[22m, 5 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m11.819s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mrisk get name (9ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mrisk get name[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m"fire"[39m
    Received: [31mundefined[39m

    Difference:

      Comparing two different types of values. Expected [32mstring[39m but received [31mundefined[39m.
[2m[22m
[2m    [0m [90m 26 | [39mtest([32m'risk get name'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 27 | [39m	let riskInstance [33m=[39m [36mnew[39m [33mRisk[39m([32m'fire'[39m[33m,[39m[35m150[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 28 | [39m	expect(riskInstance[33m.[39mgetName)[33m.[39mtoBe([32m'fire'[39m)[0m[22m
[2m    [0m [90m    | [39m	                             [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 29 | [39m})[0m[22m
[2m    [0m [90m 30 | [39m[0m[22m
[2m    [0m [90m 31 | [39mtest([32m'risk get price'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:28:31)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m4 passed[39m[22m, 5 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.374s, estimated 5s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m5 passed[39m[22m, 5 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.302s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget company name (12ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mget company name[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toEqual([22m[32mexpected[39m[2m)[22m

    Expected value to equal:
      [32m"abc"[39m
    Received:
      [31m"If"[39m
[2m[22m
[2m    [0m [90m  9 | [39mtest([32m'get company name'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 10 | [39m	let copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m([32m'abc'[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 11 | [39m	expect(copmanyInstance[33m.[39mname)[33m.[39mtoEqual([32m'abc'[39m)[0m[22m
[2m    [0m [90m    | [39m	                             [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 12 | [39m})[0m[22m
[2m    [0m [90m 13 | [39m[0m[22m
[2m    [0m [90m 14 | [39mtest([32m'create risk'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m[22m
[2m      [2mat Object.toEqual ([2m[0m[36mscript.test.js[39m[0m[2m:11:31)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m4 passed[39m[22m, 5 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m11.506s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m5 passed[39m[22m, 5 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.386s, estimated 4s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (6ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m5 passed[39m[22m, 5 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.515s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mset available risks (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mset available risks[39m[22m

    ReferenceError: availableRisks is not defined
[2m[22m
[2m    [0m [90m 32 | [39m	let riskFireInstance [33m=[39m [36mnew[39m [33mRisk[39m([32m'fire'[39m[33m,[39m[35m115[39m)[33m;[39m[0m[22m
[2m    [0m [90m 33 | [39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 34 | [39m	copmanyInstance[33m.[39msetAvailableRisks(availableRisks)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                  [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 35 | [39m	expect(copmanyInstance[33m.[39m_risks)[33m.[39mtoBeTruthy()[0m[22m
[2m    [0m [90m 36 | [39m})[0m[22m
[2m    [0m [90m 37 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.availableRisks ([2m[0m[36mscript.test.js[39m[0m[2m:34:36)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m5 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.474s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m6 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.366s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m6 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.322s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m6 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.303s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ~npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mset available risks (9ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mset available risks[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toHaveLength([22m[32mlength[39m[2m)[22m

    Expected value to have length:
      [32m0[39m
    Received:
      [31m[undefined][39m
    received.length:
      [31m1[39m
[2m[22m
[2m    [0m [90m 33 | [39m[0m[22m
[2m    [0m [90m 34 | [39m	copmanyInstance[33m.[39msetAvailableRisks([storm][fire])[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 35 | [39m	expect(copmanyInstance[33m.[39m_risks)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                               [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 36 | [39m})[0m[22m
[2m    [0m [90m 37 | [39m[0m[22m
[2m    [0m [90m 38 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toHaveLength ([2m[0m[36mscript.test.js[39m[0m[2m:35:33)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m5 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.398s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[2~[K[K[K[Knpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m6 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.34s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m6 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.302s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mset available risks (9ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mset available risks[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toHaveLength([22m[32mlength[39m[2m)[22m

    Expected value to have length:
      [32m0[39m
    Received:
      [31m[undefined][39m
    received.length:
      [31m1[39m
[2m[22m
[2m    [0m [90m 33 | [39m[0m[22m
[2m    [0m [90m 34 | [39m	copmanyInstance[33m.[39msetAvailableRisks([storm][fire])[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 35 | [39m	expect(copmanyInstance[33m.[39m_risks)[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                               [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 36 | [39m})[0m[22m
[2m    [0m [90m 37 | [39m[0m[22m
[2m    [0m [90m 38 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toHaveLength ([2m[0m[36mscript.test.js[39m[0m[2m:35:33)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m5 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.026s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m6 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.338s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mset available risks (9ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mset available risks[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toHaveLength([22m[32mlength[39m[2m)[22m

    Expected value to have length:
      [32m2[39m
    Received:
      [31m[[{"_name": "storm", "_yearlyPrice": 90}, {"_name": "fire", "_yearlyPrice": 115}]][39m
    received.length:
      [31m1[39m
[2m[22m
[2m    [0m [90m 34 | [39m[0m[22m
[2m    [0m [90m 35 | [39m	copmanyInstance[33m.[39msetAvailableRisks(availableRisks)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 36 | [39m	expect(copmanyInstance[33m.[39m_risks)[33m.[39mtoHaveLength([35m2[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                               [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 37 | [39m})[0m[22m
[2m    [0m [90m 38 | [39m[0m[22m
[2m    [0m [90m 39 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toHaveLength ([2m[0m[36mscript.test.js[39m[0m[2m:36:33)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m5 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.357s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m6 passed[39m[22m, 6 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.309s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mset available risks (9ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mset available risks[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).not.toHaveLength([22m[32mlength[39m[2m)[22m

    Expected value to not have length:
      [32m0[39m
    Received:
      [31m[][39m
    received.length:
      [31m0[39m
[2m[22m
[2m    [0m [90m 34 | [39m[0m[22m
[2m    [0m [90m 35 | [39m	copmanyInstance[33m.[39msetAvailableRisks(availableRisks)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 36 | [39m	expect(copmanyInstance[33m.[39m_risks)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                   [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 37 | [39m})[0m[22m
[2m    [0m [90m 38 | [39m[0m[22m
[2m    [0m [90m 39 | [39mtest([32m'get available risks'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m[22m
[2m      [2mat Object.toHaveLength ([2m[0m[36mscript.test.js[39m[0m[2m:36:37)[2m[22m

[1m[31m  [1m● [1mget available risks[39m[22m

    TypeError: copmanyInstance.getAvailableRisks is not a function
[2m[22m
[2m    [0m [90m 43 | [39m	let availableRisks [33m=[39m [storm[33m,[39m fire][33m;[39m[0m[22m
[2m    [0m [90m 44 | [39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 45 | [39m	expect(copmanyInstance[33m.[39mgetAvailableRisks())[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                       [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 46 | [39m})[0m[22m
[2m    [0m [90m 47 | [39m[0m[22m
[2m    [0m [90m 48 | [39m[90m/*[39m[0m[22m
[2m[22m
[2m      [2mat Object.getAvailableRisks ([2m[0m[36mscript.test.js[39m[0m[2m:45:25)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m2 failed[39m[22m, [1m[32m5 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.491s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mset available risks (9ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mset available risks[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).not.toHaveLength([22m[32mlength[39m[2m)[22m

    Expected value to not have length:
      [32m0[39m
    Received:
      [31m[][39m
    received.length:
      [31m0[39m
[2m[22m
[2m    [0m [90m 34 | [39m[0m[22m
[2m    [0m [90m 35 | [39m	copmanyInstance[33m.[39msetAvailableRisks(availableRisks)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 36 | [39m	expect(copmanyInstance[33m.[39m_risks)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                   [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 37 | [39m})[0m[22m
[2m    [0m [90m 38 | [39m[0m[22m
[2m    [0m [90m 39 | [39mtest([32m'get available risks'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m[22m
[2m      [2mat Object.toHaveLength ([2m[0m[36mscript.test.js[39m[0m[2m:36:37)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m6 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.325s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m7 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.321s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mget available risks[39m[22m

    TypeError: expect(...).arrayContaining is not a function
[2m[22m
[2m    [0m [90m 44 | [39m[0m[22m
[2m    [0m [90m 45 | [39m  [36mconst[39m expected [33m=[39m [{_name[33m:[39m [32m'storm'[39m[33m,[39m _yearlyPrice[33m:[39m [35m90[39m}[33m,[39m {_name[33m:[39m [32m'fire'[39m[33m,[39m _yearlyPrice[33m:[39m [35m115[39m}][33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 46 | [39m	expect(copmanyInstance[33m.[39mavailableRisks)[33m.[39marrayContaining(expected)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                       [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 47 | [39m})[0m[22m
[2m    [0m [90m 48 | [39m[0m[22m
[2m    [0m [90m 49 | [39m[90m/*[39m[0m[22m
[2m[22m
[2m      [2mat Object.arrayContaining ([2m[0m[36mscript.test.js[39m[0m[2m:46:41)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m6 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.341s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ~[Knpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mget available risks[39m[22m

    ReferenceError: arrayContaining is not defined
[2m[22m
[2m    [0m [90m 44 | [39m[0m[22m
[2m    [0m [90m 45 | [39m  [36mconst[39m expected [33m=[39m [{_name[33m:[39m [32m'storm'[39m[33m,[39m _yearlyPrice[33m:[39m [35m90[39m}[33m,[39m {_name[33m:[39m [32m'fire'[39m[33m,[39m _yearlyPrice[33m:[39m [35m115[39m}][33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 46 | [39m	expect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mtoEqual(expect(arrayContaining(expected)))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	[31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 47 | [39m})[0m[22m
[2m    [0m [90m 48 | [39m[0m[22m
[2m    [0m [90m 49 | [39m[90m/*[39m[0m[22m
[2m[22m
[2m      [2mat Object.<anonymous>.test ([2m[0m[36mscript.test.js[39m[0m[2m:46:2)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m6 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.338s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[A
[A: command not found
^C
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks (14ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mget available risks[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toEqual([22m[32mexpected[39m[2m)[22m

    Expected value to equal:
      [32mArrayContaining [{"_name": "storm", "_yearlyPrice": 90}, {"_name": "fire", "_yearlyPrice": 115}][39m
    Received:
      [31m[][39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- ArrayContaining [[39m
    [32m-   Object {[39m
    [32m-     "_name": "storm",[39m
    [32m-     "_yearlyPrice": 90,[39m
    [32m-   },[39m
    [32m-   Object {[39m
    [32m-     "_name": "fire",[39m
    [32m-     "_yearlyPrice": 115,[39m
    [32m-   },[39m
    [32m- ][39m
    [31m+ Array [][39m
[2m[22m
[2m    [0m [90m 44 | [39m[0m[22m
[2m    [0m [90m 45 | [39m  [36mconst[39m expected [33m=[39m [{_name[33m:[39m [32m'storm'[39m[33m,[39m _yearlyPrice[33m:[39m [35m90[39m}[33m,[39m {_name[33m:[39m [32m'fire'[39m[33m,[39m _yearlyPrice[33m:[39m [35m115[39m}][33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 46 | [39m	expect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mtoEqual(expect[33m.[39marrayContaining(expected))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                       [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 47 | [39m})[0m[22m
[2m    [0m [90m 48 | [39m[0m[22m
[2m    [0m [90m 49 | [39m[90m/*[39m[0m[22m
[2m[22m
[2m      [2mat Object.toEqual ([2m[0m[36mscript.test.js[39m[0m[2m:46:41)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m6 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.381s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks (15ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mget available risks[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toEqual([22m[32mexpected[39m[2m)[22m

    Expected value to equal:
      [32mArrayContaining [{"_name": "storm", "_yearlyPrice": 90}, {"_name": "fire", "_yearlyPrice": 115}][39m
    Received:
      [31m[][39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- ArrayContaining [[39m
    [32m-   Object {[39m
    [32m-     "_name": "storm",[39m
    [32m-     "_yearlyPrice": 90,[39m
    [32m-   },[39m
    [32m-   Object {[39m
    [32m-     "_name": "fire",[39m
    [32m-     "_yearlyPrice": 115,[39m
    [32m-   },[39m
    [32m- ][39m
    [31m+ Array [][39m
[2m[22m
[2m    [0m [90m 45 | [39m	copmanyInstance[33m.[39msetAvailableRisks(availableRisks)[33m;[39m[0m[22m
[2m    [0m [90m 46 | [39m 	[36mconst[39m expected [33m=[39m [{_name[33m:[39m [32m'storm'[39m[33m,[39m _yearlyPrice[33m:[39m [35m90[39m}[33m,[39m {_name[33m:[39m [32m'fire'[39m[33m,[39m _yearlyPrice[33m:[39m [35m115[39m}][33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 47 | [39m	expect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mtoEqual(expect[33m.[39marrayContaining(expected))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                       [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 48 | [39m})[0m[22m
[2m    [0m [90m 49 | [39m[0m[22m
[2m    [0m [90m 50 | [39m[90m/*[39m[0m[22m
[2m[22m
[2m      [2mat Object.toEqual ([2m[0m[36mscript.test.js[39m[0m[2m:47:41)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m6 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.411s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks (15ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mget available risks[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toEqual([22m[32mexpected[39m[2m)[22m

    Expected value to equal:
      [32mArrayContaining [{"_name": "storm", "_yearlyPrice": 90}, {"_name": "fire", "_yearlyPrice": 115}][39m
    Received:
      [31m[[{"_name": "storm", "_yearlyPrice": 90}, {"_name": "fire", "_yearlyPrice": 115}]][39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- ArrayContaining [[39m
    [32m-   Object {[39m
    [31m+ Array [[39m
    [31m+   Array [[39m
    [31m+     Risk {[39m
    [36m        "_name": "storm",[39m
    [36m        "_yearlyPrice": 90,[39m
    [36m      },[39m
    [32m-   Object {[39m
    [31m+     Risk {[39m
    [36m        "_name": "fire",[39m
    [36m        "_yearlyPrice": 115,[39m
    [36m      },[39m
    [31m+   ],[39m
    [2m  ][22m
[2m[22m
[2m    [0m [90m 45 | [39m	copmanyInstance[33m.[39msetAvailableRisks(availableRisks)[33m;[39m[0m[22m
[2m    [0m [90m 46 | [39m 	[36mconst[39m expected [33m=[39m [{_name[33m:[39m [32m'storm'[39m[33m,[39m _yearlyPrice[33m:[39m [35m90[39m}[33m,[39m {_name[33m:[39m [32m'fire'[39m[33m,[39m _yearlyPrice[33m:[39m [35m115[39m}][33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 47 | [39m	expect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mtoEqual(expect[33m.[39marrayContaining(expected))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                       [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 48 | [39m})[0m[22m
[2m    [0m [90m 49 | [39m[0m[22m
[2m    [0m [90m 50 | [39m[90m/*[39m[0m[22m
[2m[22m
[2m      [2mat Object.toEqual ([2m[0m[36mscript.test.js[39m[0m[2m:47:41)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m6 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.473s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks (8ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mget available risks[39m[22m

    You must provide an array to ArrayContaining, not 'object'.
[2m[22m
[2m    [0m [90m 45 | [39m	copmanyInstance[33m.[39msetAvailableRisks(availableRisks)[33m;[39m[0m[22m
[2m    [0m [90m 46 | [39m 	[36mconst[39m expected [33m=[39m [36mnull[39m[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 47 | [39m	expect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mtoEqual(expect[33m.[39marrayContaining(expected))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                       [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 48 | [39m})[0m[22m
[2m    [0m [90m 49 | [39m[0m[22m
[2m    [0m [90m 50 | [39m[90m/*[39m[0m[22m
[2m[22m
[2m      [2mat Object.toEqual ([2m[0m[36mscript.test.js[39m[0m[2m:47:41)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m6 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.343s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m7 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.412s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks (14ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mget available risks[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toEqual([22m[32mexpected[39m[2m)[22m

    Expected value to equal:
      [32m[{"_name": "storm", "_yearlyPrice": 90}, {"_name": "fire", "_yearlyPrice": 115}][39m
    Received:
      [31m[[{"_name": "storm", "_yearlyPrice": 90}, {"_name": "fire", "_yearlyPrice": 115}]][39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [2m  Array [[22m
    [32m-   Object {[39m
    [31m+   Array [[39m
    [31m+     Risk {[39m
    [36m        "_name": "storm",[39m
    [36m        "_yearlyPrice": 90,[39m
    [36m      },[39m
    [32m-   Object {[39m
    [31m+     Risk {[39m
    [36m        "_name": "fire",[39m
    [36m        "_yearlyPrice": 115,[39m
    [36m      },[39m
    [31m+   ],[39m
    [2m  ][22m
[2m[22m
[2m    [0m [90m 45 | [39m	copmanyInstance[33m.[39msetAvailableRisks(availableRisks)[33m;[39m[0m[22m
[2m    [0m [90m 46 | [39m 	[36mconst[39m expected [33m=[39m [{_name[33m:[39m [32m'storm'[39m[33m,[39m _yearlyPrice[33m:[39m [35m90[39m}[33m,[39m {_name[33m:[39m [32m'fire'[39m[33m,[39m _yearlyPrice[33m:[39m [35m115[39m}][33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 47 | [39m	expect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mtoEqual([{_name[33m:[39m [32m'storm'[39m[33m,[39m _yearlyPrice[33m:[39m [35m90[39m}[33m,[39m {_name[33m:[39m [32m'fire'[39m[33m,[39m _yearlyPrice[33m:[39m [35m115[39m}])[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                       [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 48 | [39m})[0m[22m
[2m    [0m [90m 49 | [39m[90m/*[39m[0m[22m
[2m    [0m [90m 50 | [39m[90mtest('company name is never empty',()=>{[39m[0m[22m
[2m[22m
[2m      [2mat Object.toEqual ([2m[0m[36mscript.test.js[39m[0m[2m:47:41)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m6 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.366s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ~~[K[K~[Knpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mset available risks (11ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mset available risks[39m[22m

    TypeError: Cannot read property '_risks' of undefined
[2m[22m
[2m    [0m [90m 21 | [39m		[90m// Put your logic here[39m[0m[22m
[2m    [0m [90m 22 | [39m		risks[33m.[39mforEach([36mfunction[39m(elem){[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 23 | [39m			[36mthis[39m[33m.[39m_risks[33m.[39mpush(elem)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m			     [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 24 | [39m		})[33m;[39m[0m[22m
[2m    [0m [90m 25 | [39m	}[0m[22m
[2m    [0m [90m 26 | [39m	[0m[22m
[2m[22m
[2m      [2mat _risks ([2m[0m[36mscript.js[39m[0m[2m:23:9)[2m[22m
[2m          at Array.forEach (<anonymous>)[22m
[2m      [2mat InsuranceCompany.forEach [as setAvailableRisks] ([2m[0m[36mscript.js[39m[0m[2m:22:9)[2m[22m
[2m      [2mat Object.setAvailableRisks ([2m[0m[36mscript.test.js[39m[0m[2m:35:18)[2m[22m

[1m[31m  [1m● [1mget available risks[39m[22m

    TypeError: Cannot read property '_risks' of undefined
[2m[22m
[2m    [0m [90m 21 | [39m		[90m// Put your logic here[39m[0m[22m
[2m    [0m [90m 22 | [39m		risks[33m.[39mforEach([36mfunction[39m(elem){[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 23 | [39m			[36mthis[39m[33m.[39m_risks[33m.[39mpush(elem)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m			     [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 24 | [39m		})[33m;[39m[0m[22m
[2m    [0m [90m 25 | [39m	}[0m[22m
[2m    [0m [90m 26 | [39m	[0m[22m
[2m[22m
[2m      [2mat _risks ([2m[0m[36mscript.js[39m[0m[2m:23:9)[2m[22m
[2m          at Array.forEach (<anonymous>)[22m
[2m      [2mat InsuranceCompany.forEach [as setAvailableRisks] ([2m[0m[36mscript.js[39m[0m[2m:22:9)[2m[22m
[2m      [2mat Object.setAvailableRisks ([2m[0m[36mscript.test.js[39m[0m[2m:45:18)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m2 failed[39m[22m, [1m[32m5 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.521s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ =^?[K[Knpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m7 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.297s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mset available risks (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mget available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mset available risks[39m[22m

    TypeError: Cannot read property '_risks' of undefined
[2m[22m
[2m    [0m [90m 22 | [39m		[36mvar[39m _this [33m=[39m [36mthis[39m[33m;[39m[0m[22m
[2m    [0m [90m 23 | [39m		risks[33m.[39mforEach([36mfunction[39m(elem){[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 24 | [39m			[36mthis[39m[33m.[39m_risks[33m.[39mpush(elem)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m			     [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 25 | [39m		})[33m.[39mbind([36mthis[39m)[33m;[39m[0m[22m
[2m    [0m [90m 26 | [39m	}[0m[22m
[2m    [0m [90m 27 | [39m	[0m[22m
[2m[22m
[2m      [2mat _risks ([2m[0m[36mscript.js[39m[0m[2m:24:9)[2m[22m
[2m          at Array.forEach (<anonymous>)[22m
[2m      [2mat InsuranceCompany.forEach [as setAvailableRisks] ([2m[0m[36mscript.js[39m[0m[2m:23:9)[2m[22m
[2m      [2mat Object.setAvailableRisks ([2m[0m[36mscript.test.js[39m[0m[2m:35:18)[2m[22m

[1m[31m  [1m● [1mget available risks[39m[22m

    TypeError: Cannot read property '_risks' of undefined
[2m[22m
[2m    [0m [90m 22 | [39m		[36mvar[39m _this [33m=[39m [36mthis[39m[33m;[39m[0m[22m
[2m    [0m [90m 23 | [39m		risks[33m.[39mforEach([36mfunction[39m(elem){[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 24 | [39m			[36mthis[39m[33m.[39m_risks[33m.[39mpush(elem)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m			     [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 25 | [39m		})[33m.[39mbind([36mthis[39m)[33m;[39m[0m[22m
[2m    [0m [90m 26 | [39m	}[0m[22m
[2m    [0m [90m 27 | [39m	[0m[22m
[2m[22m
[2m      [2mat _risks ([2m[0m[36mscript.js[39m[0m[2m:24:9)[2m[22m
[2m          at Array.forEach (<anonymous>)[22m
[2m      [2mat InsuranceCompany.forEach [as setAvailableRisks] ([2m[0m[36mscript.js[39m[0m[2m:23:9)[2m[22m
[2m      [2mat Object.setAvailableRisks ([2m[0m[36mscript.test.js[39m[0m[2m:45:18)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m2 failed[39m[22m, [1m[32m5 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.343s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.js: Unexpected token, expected { (23:30)

      [0m [90m 21 | [39m		[90m// Put your logic here[39m
       [90m 22 | [39m		[36mvar[39m _this [33m=[39m [36mthis[39m[33m;[39m
      [31m[1m>[22m[39m[90m 23 | [39m		risks[33m.[39mforEach([36mfunction[39m(elem)[33m.[39mbind([36mthis[39m){
       [90m    | [39m		                            [31m[1m^[22m[39m
       [90m 24 | [39m			[36mthis[39m[33m.[39m_risks[33m.[39mpush(elem)[33m;[39m
       [90m 25 | [39m		})[33m;[39m
       [90m 26 | [39m	}[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.164s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m7 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.341s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m7 passed[39m[22m, 7 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.531s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Invalid number (56:37)

      [0m [90m 54 | [39mlet company [33m=[39m [36mnew[39m [33mInsuranceCompany[39m()[33m;[39m
       [90m 55 | [39mcompany[33m.[39msetAvailableRisks(availableRisks)[33m;[39m
      [31m[1m>[22m[39m[90m 56 | [39mlet policyStartDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m [35m01[39m[33m,[39m [35m01[39m)[33m;[39m
       [90m    | [39m                                     [31m[1m^[22m[39m
       [90m 57 | [39mlet policy [33m=[39m company[33m.[39msellPolicy([32m'Garage'[39m[33m,[39m policyStartDate[33m,[39m [35m12[39m[33m,[39m [theftRisk])[33m;[39m
       [90m 58 | [39m
       [90m 59 | [39mexpect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m11.242s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Invalid number (56:37)

      [0m [90m 54 | [39mlet company [33m=[39m [36mnew[39m [33mInsuranceCompany[39m()[33m;[39m
       [90m 55 | [39mcompany[33m.[39msetAvailableRisks(availableRisks)[33m;[39m
      [31m[1m>[22m[39m[90m 56 | [39mlet policyStartDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m [35m01[39m[33m,[39m [35m01[39m)[33m;[39m
       [90m    | [39m                                     [31m[1m^[22m[39m
       [90m 57 | [39mlet policy [33m=[39m company[33m.[39msellPolicy([32m'Garage'[39m[33m,[39m policyStartDate[33m,[39m [35m12[39m[33m,[39m [theftRisk])[33m;[39m
       [90m 58 | [39m
       [90m 59 | [39mexpect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        11.183s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Invalid number (56:36)

      [0m [90m 54 | [39mlet company [33m=[39m [36mnew[39m [33mInsuranceCompany[39m()[33m;[39m
       [90m 55 | [39mcompany[33m.[39msetAvailableRisks(availableRisks)[33m;[39m
      [31m[1m>[22m[39m[90m 56 | [39mlet policyStartDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m01[39m[33m,[39m[35m01[39m)[33m;[39m
       [90m    | [39m                                    [31m[1m^[22m[39m
       [90m 57 | [39mlet policy [33m=[39m company[33m.[39msellPolicy([32m'Garage'[39m[33m,[39m policyStartDate[33m,[39m [35m12[39m[33m,[39m [theftRisk])[33m;[39m
       [90m 58 | [39m
       [90m 59 | [39mexpect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.178s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Invalid number (56:40)

      [0m [90m 54 | [39mlet company [33m=[39m [36mnew[39m [33mInsuranceCompany[39m()[33m;[39m
       [90m 55 | [39mcompany[33m.[39msetAvailableRisks(availableRisks)[33m;[39m
      [31m[1m>[22m[39m[90m 56 | [39mlet policyStartDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m [35m0[39m[33m,[39m [35m01[39m)[33m;[39m
       [90m    | [39m                                        [31m[1m^[22m[39m
       [90m 57 | [39mlet policy [33m=[39m company[33m.[39msellPolicy([32m'Garage'[39m[33m,[39m policyStartDate[33m,[39m [35m12[39m[33m,[39m [theftRisk])[33m;[39m
       [90m 58 | [39m
       [90m 59 | [39mexpect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        5.674s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2msell policy (8ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1msell policy[39m[22m

    ReferenceError: copmanyInstance is not defined
[2m[22m
[2m    [0m [90m 57 | [39mlet policy [33m=[39m company[33m.[39msellPolicy([32m'Garage'[39m[33m,[39m policyStartDate[33m,[39m [35m12[39m[33m,[39m [theftRisk])[33m;[39m[0m[22m
[2m    [0m [90m 58 | [39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 59 | [39mexpect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m       [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 60 | [39m[0m[22m
[2m    [0m [90m 61 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.copmanyInstance ([2m[0m[36mscript.test.js[39m[0m[2m:59:8)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m7 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.644s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (7ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2msell policy (8ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1msell policy[39m[22m

    ReferenceError: company is not defined
[2m[22m
[2m    [0m [90m 57 | [39m[90m//The argument monthIndex is 0-based. This means that January = 0 and December = 11.[39m[0m[22m
[2m    [0m [90m 58 | [39mlet policyStartDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m [35m0[39m[33m,[39m [35m1[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 59 | [39mlet policy [33m=[39m company[33m.[39msellPolicy([32m'Garage'[39m[33m,[39m policyStartDate[33m,[39m [35m12[39m[33m,[39m [theftRisk])[33m;[39m[0m[22m
[2m    [0m [90m    | [39m             [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 60 | [39m[0m[22m
[2m    [0m [90m 61 | [39mexpect(copmanyInstance[33m.[39mavailableRisks)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m[22m
[2m    [0m [90m 62 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.company ([2m[0m[36mscript.test.js[39m[0m[2m:59:14)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m7 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m6.11s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[A
^C
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2msell policy (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1msell policy[39m[22m

    [2mexpect([22m[31mreceived[39m[2m)[.not].toHaveLength([22m[32mlength[39m[2m)[22m

    Expected value to have a 'length' property that is a number. Received:
      [31m{"_nameOfInsuredObject": undefined, "_selectedRisks": undefined, "_validFrom": undefined, "_validMonths": undefined}[39m
    received.length:22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1msell policy[39m[22m

    [2mexpect([22m[31mreceived[39m[2m)[.not].toHaveLength([22m[32mlength[39m[2m)[22m

    Expected value to have a 'length' property that is a number. Received:
      [31m{"_nameOfInsuredObject": undefined, "_selectedRisks": undefined, "_validFrom": undefined, "_validMonths": undefined}[39m
    received.length:
      [31mundefined[39m
[2m[22m
[2m    [0m [90m 59 | [39mlet policy [33m=[39m copmanyInstance[33m.[39msellPolicy([32m'Garage'[39m[33m,[39m policyStartDate[33m,[39m [35m12[39m[33m,[39m [theftRisk])[33m;[39m[0m[22m
[2m    [0m [90m 60 | [39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 61 | [39mexpect(policy)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m                   [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 62 | [39m[0m[22m
[2m    [0m [90m 63 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toHaveLength ([2m[0m[36mscript.test.js[39m[0m[2m:61:20)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m7 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.35s, estimated 4s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (3ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (6ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2msell policy (29ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1msell policy[39m[22m

    [2mexpect([22m[31mreceived[39m[2m)[.not].toHaveLength([22m[32mlength[39m[2m)[22m

    Expected value to have a 'length' property that is a number.m 61 | [39mexpect(policy)[33m.[39mnot[33m.[39mtoHaveLength([35m0[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m                   [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 62 | [39m[0m[22m
[2m    [0m [90m 63 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toHaveLength ([2m[0m[36mscript.test.js[39m[0m[2m:61:20)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m7 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m13.131s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (6ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m8 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.477s, estimated 4s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m8 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.265s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m8 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.483s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2msell policy (8ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1msell policy[39m[22m

    TypeError: expect.toBeTypeOrNull is not a function
[2m[22m
[2m    [0m [90m 60 | [39m[0m[22m
[2m    [0m [90m 61 | [39mexpect(policy)[33m.[39mtoMatchObject({[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 62 | [39m    _nameOfInsuredObject[33m:[39m expect[33m.[39mtoBeTypeOrNull([33mString[39m)[33m,[39m[0m[22m
[2m    [0m [90m    | [39m                                 [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 63 | [39m    _validFrom[33m:[39m expect[33m.[39mtoBeTypeOrNull([33mDate[39m)[33m,[39m[0m[22m
[2m    [0m [90m 64 | [39m    _validMonths[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m[0m[22m
[2m    [0m [90m 65 | [39m    _selectedRisks[33m:[39m expect[33m.[39many([33mArray[39m)[0m[22m
[2m[22m
[2m      [2mat Object.toBeTypeOrNull ([2m[0m[36mscript.test.js[39m[0m[2m:62:34)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m7 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.359s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[A
^C
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (6ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39mm[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m8 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.614s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2msell policy (18ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1msell policy[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toMatchObject([22m[32mexpected[39m[2m)[22m

    Expected value to match object:
      [32m{"_nameOfInsuredObject": Any<Date>, "_selectedRisks": Any<Array>, "_validFrom": Any<Date>, "_validMonths": Any<Number>}[39m
    Received:
      [31m{"_nameOfInsuredObject": "Garage", "_selectedRisks": [{"_name": "Theft", "_yearlyPrice": 100}], "_validFrom": 2018-12-31T22:00:00.000Z, "_validMonths": 12}[39m
    Difference:
    [32m- Expected[39m
    [31m+ Received[39m

    [2m  Object {[22m
    [32m-   "_nameOfInsuredObject": Any<Date>,[39m
    [32m-   "_selectedRisks": Any<Array>,[39m
    [32m-   "_validFrom": Any<Date>,[39m
    [32m-   "_validMonths": Any<Number>,[39m
    [31m+   "_nameOfInsuredObject": "Garage",[39m
    [31m+   "_selectedRisks": Array [[39m
    [31m+     Risk {[39m
    [31m+       "_name": "Theft",[39m
    [31m+       "_yearlyPrice": 100,[39m
    [31m+     },[39m
    [31m+   ],[39m
    [31m+   "_validFrom": 2018-12-31T22:00:00.000Z,[39m
    [31m+   "_validMonths": 12,[39m
    [2m  }[22m
[2m[22m
[2m    [0m [90m 59 | [39mlet polic [39m    _validFrom[33m:[39m expect[33m.[39many([33mDate[39m)[33m,[39m[0m[22m
[2m    [0m [90m 64 | [39m    _validMonths[33m:[39m expect[33m.[39many([33mNumber[39m)[33m,[39m[0m[22m
[2m[22m
[2m      [2mat Object.toMatchObject ([2m[0m[36mscript.test.js[39m[0m[2m:61:16)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m7 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.505s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m8 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.087s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m8 passed[39m[22m, 8 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.473s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token (75:50)

      [1m[31mJest encountered an unexpected token[39m[22m
      This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.
      By default, if Jest sees a Babel config, it will use that to transform your files, ignoring "node_modules".
      Here's what you can do:
       • To have some of your "node_modules" files transformed, you can specify a custom [1m"transformIgnorePatterns"[22m in your config.
       • If you need a custom transformation specify a [1m"transform"[22m option in your config.
       • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the [1m"moduleNameMapper"[22m config option.
      You'll find more details and examples of these config options in the docs:
      [36mhttps://jestjs.io/docs/en/configuration.html[39m
      [1m[31mDetails:[39m[22m
      [0m [90m 73 | [39m	let policy [33m=[39m copmanyInstance[33m.[39msellPolicy([32m'Garage'[39m[33m,[39m policyStartDate[33m,[39m [35m12[39m[33m,[39m [theftRisk])[33m;[39m
       [90m 74 | [39m
      [31m[1m>[22m[39m[90m 75 | [39m	expect(policy[33m.[39mnameOfInsuredObject)[33m.[39mtoBe({[32m'Garage'[39m})[33m;[39m
       [90m    | [39m	                                                 [31m[1m^[22m[39m
       [90m 76 | [39m})
       [90m 77 | [39m
       [90m 78 | [39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.222s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token (75:50)

      [1m[31mJest encountered an unexpected token[39m[22m
      This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.
      By default, if Jest sees a Babel config, it will use that to transform your files, ignoring "node_modules".
      Here's what you can do:
       • To have some of your "node_modules" files transformed, you can specify a custom [1m"transformIgnorePatterns"[22m in your config.
       • If you need a custom transformation specify a [1m"transform"[22m option in your config.
       • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the [1m"moduleNameMapper"[22m config option.
      You'll find more details and examples of these config options in the docs:
      [36mhttps://jestjs.io/docs/en/configuration.html[39m
      [1m[31mDetails:[39m[22m
      [0m [90m 73 | [39m	let policy [33m=[39m copmanyInstance[33m.[39msellPolicy([32m'Garage'[39m[33m,[39m policyStartDate[33m,[39m [35m12[39m[33m,[39m [theftRisk])[33m;[39m
       [90m 74 | [39m
      [31m[1m>[22m[39m[90m 75 | [39m	expect(policy[33m.[39mnameOfInsuredObject)[33m.[39mtoBe({[32m'Garage'[39m})[33m;[39m
       [90m    | [39m	                                                 [31m[1m^[22m[39m
       [90m 76 | [39m})
       [90m 77 | [39m
       [90m 78 | [39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.16s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m9 passed[39m[22m, 9 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.488s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get object name (11ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get object name[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2018-12-31T22:00:00.000Z[39m
    Received: [31m"Garage"[39m

    Difference:

      Comparing two different types of values. Expected [32mdate[39m but received [31mstring[39m.
[2m[22m
[2m    [0m [90m 76 | [39m[0m[22m
[2m    [0m [90m 77 | [39mtest([32m'policy get object name'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 78 | [39m	expect(policy[33m.[39mnameOfInsuredObject)[33m.[39mtoBe(policyStartDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                   [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 79 | [39m})[0m[22m
[2m    [0m [90m 80 | [39m[0m[22m
[2m    [0m [90m 81 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:78:37)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m9 passed[39m[22m, 10 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.382s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get object name (11ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get object name[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2018-12-31T22:00:00.000Z[39m
    Received: [31m"Garage"[39m

    Difference:

      Comparing two different types of values. Expected [32mdate[39m but received [31mstring[39m.
[2m[22m
[2m    [0m [90m 76 | [39m[0m[22m
[2m    [0m [90m 77 | [39mtest([32m'policy get object name'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 78 | [39m	expect(policy[33m.[39mnameOfInsuredObject)[33m.[39mtoBe(policyStartDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                   [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 79 | [39m})[0m[22m
[2m    [0m [90m 80 | [39m[0m[22m
[2m    [0m [90m 81 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:78:37)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m9 passed[39m[22m, 10 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.364s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ~~[K[Knpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get object name (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get object name[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2018-12-31T22:00:00.000Z[39m
    Received: [31m"Garage"[39m

    Difference:

      Comparing two different types of values. Expected [32mdate[39m but received [31mstring[39m.
[2m[22m
[2m    [0m [90m 76 | [39m[0m[22m
[2m    [0m [90m 77 | [39mtest([32m'policy get object name'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 78 | [39m	expect(policy[33m.[39mnameOfInsuredObject)[33m.[39mtoBe(policyStartDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                   [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 79 | [39m})[0m[22m
[2m    [0m [90m 80 | [39m[0m[22m
[2m    [0m [90m 81 | [39m[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:78:37)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m9 passed[39m[22m, 10 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.419s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset company name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget company name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcreate risk[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget risk yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m10 passed[39m[22m, 10 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.339s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ~npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (9ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (3ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (21ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2020-01-30T22:00:00.000Z[39m
    Received: [31m0[39m

    Difference:

      Comparing two different types of values. Expected [32mdate[39m but received [31mnumber[39m.
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m12[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m13.853s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2020-01-30T22:00:00.000Z[39m
    Received: [31m1577829600000[39m

    Difference:

      Comparing two different types of values. Expected [32mdate[39m but received [31mnumber[39m.
[2m[22m
[2m    
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2020-01-30T22:00:00.000Z[39m
    Received: [31m1577829600000[39m

    Difference:

      Comparing two different types of values. Expected [32mdate[39m but received [31mnumber[39m.
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m12[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.381s, estimated 5s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2020-01-30T22:00:00.000Z[39m
    Received: [31m1577829600000[39m

    Difference:

      Comparing two different types of values. Expected [32mdate[39m but received [31mnumber[39m.
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m12[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.416s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (11ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2020-01-30T22:00:00.000Z[39m
    Received: [31m1577829600000[39m

    Difference:

      Comparing two different types of values. Expected [32mdatem[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.38s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (8ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (14ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2020-01-30T22:00:00.000Z[39m
    Received: [31m2020-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2020-01-30T22:00:00.000Z[39m
    [31m+ 2020-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m12[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m10.321s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (14ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-12-30T22:00:00.000Z[39m
    Received: [31m2020-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2019-12-30T22:00:00.000Z[39m
    [31m+ 2020-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.45s, estimated 3s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (14ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-12-30T22:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2019-12-30T22:00:00.000Z[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.458s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ~~[K[Knpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (6ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (16ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-12-30T22:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2019-12-30T22:00:00.000Z[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m9.331s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (14ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-12-30T22:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2019-12-30T22:00:00.000Z[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe([36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m4.212s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (12ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-12-31T22:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [2mCompared values have no visual difference.[22m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe([36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m32[39m))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.352s, estimated 4s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (19ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-11-29T22:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2019-11-29T22:00:00.000Z[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe([36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m0[39m))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.359s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (18ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-12-30T22:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2019-12-30T22:00:00.000Z[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.141s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m"2019-12-31T22:00:00.000Z"[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

      Comparing two different types of values. Expected [32mstring[39m but received [31mdate[39m.
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m12[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe([32m'2019-12-31T22:00:00.000Z'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.343s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m"2019-12-31T22:00:00.000Z"[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

      Comparing two different types of values. Expected [32mstring[39m but received [31mdate[39m.
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m12[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe([32m'2019-12-31T22:00:00.000Z'[39m)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.023s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (13ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m1937-07-10T21:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 1937-07-10T21:00:00.000Z[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m31[39m[33m,[39m[35m12[39m[33m,[39m[35m2019[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.396s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (13ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32mDate { NaN }[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- Date { NaN }[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([32m"31-12-2019"[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.363s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (13ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32mDate { NaN }[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- Date { NaN }[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([32m"31-11-2019"[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.4s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (14ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-11-30T22:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2019-11-30T22:00:00.000Z[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([32m"11-31-2019"[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe(tillDate)[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.362s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test[4P^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (9ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    ReferenceError: doo is not defined
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe([36mnew[39m [33mDate[39m( tillDate[33m.[39mgetTime() [33m+[39m [33mMath[39m[33m.[39mabs(doo[33m.[39mgetTimezoneOffset()[33m*[39m[35m60000[39m) ))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                                                                      [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.doo ([2m[0m[36mscript.test.js[39m[0m[2m:80:72)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.375s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (14ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-12-31T00:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2019-12-31T00:00:00.000Z[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe([36mnew[39m [33mDate[39m( tillDate[33m.[39mgetTime() [33m+[39m [33mMath[39m[33m.[39mabs(tillDate[33m.[39mgetTimezoneOffset()[33m*[39m[35m60000[39m) ))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.335s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m1577743200000[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

      Comparing two different types of values. Expected [32mnumber[39m but received [31mdate[39m.
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe([36mnew[39m [33mDate[39m( tillDate[33m.[39mgetTime() [33m+[39m [33mMath[39m[33m.[39mabs(tillDate[33m.[39mgetTimezoneOffset()[33m*[39m[35m60000[39m) )[33m.[39msetHours([35m0[39m[33m,[39m[35m0[39m[33m,[39m[35m0[39m[33m,[39m[35m0[39m))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.346s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m  available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (14ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mreceived[39m[2m).toBe([22m[32mexpected[39m[2m) // Object.is equality[22m

    Expected: [32m2019-12-31T00:00:00.000Z[39m
    Received: [31m2019-12-31T22:00:00.000Z[39m

    Difference:

    [32m- Expected[39m
    [31m+ Received[39m

    [32m- 2019-12-31T00:00:00.000Z[39m
    [31m+ 2019-12-31T22:00:00.000Z[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39mtoBe([36mnew[39m [33mDate[39m( tillDate[33m.[39mgetTime() [33m+[39m [33mMath[39m[33m.[39mabs(tillDate[33m.[39mgetTimezoneOffset()[33m*[39m[35m60000[39m) ))[33m;[39m[0m[22m
[2m    [0m [90m    | [39m	                         [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toBe ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.028s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[A
[A: command not found
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^C
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token (80:26)

      [1m[31mJest encountered an unexpected token[39m[22m
      This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.
      By default, if Jest sees a Babel config, it will use that to transform your files, ignoring "node_modules".
      Here's what you can do:
       • To have some of your "node_modules" files transformed, you can specify a custom [1m"transformIgnorePatterns"[22m in your config.
       • If you need a custom transformation specify a [1m"transform"[22m option in your config.
       • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the [1m"moduleNameMapper"[22m config option.
      You'll find more details and examples of these config options in the docs:
      [36mhttps://jestjs.io/docs/en/configuration.html[39m
      [1m[31mDetails:[39m[22m
      [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {
       [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m
      [31m[1m>[22m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill)[33m.[39m[33m.[39mtoContain([32m'2019-12-31'[39m)[33m;[39m
       [90m    | [39m	                         [31m[1m^[22m[39m
       [90m 81 | [39m})[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.215s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (11ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mdate[39m[2m).toContain([22m[32mvalue[39m[2m)[22m

    Expected date:
      [31m2019-12-31T22:00:00.000Z[39m
    To contain value:
      [32m"2019-12-31"[39m
[2m[22m
[2m    [0m [90m 7 [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toContain ([2m[0m[36mscript.test.js[39m[0m[2m:80:27)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.37s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.test.js: Unexpected token (55:45)

      [1m[31mJest encountered an unexpected token[39m[22m
      This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.
      By default, if Jest sees a Babel config, it will use that to transform your files, ignoring "node_modules".
      Here's what you can do:
       • To have some of your "node_modules" files transformed, you can specify a custom [1m"transformIgnorePatterns"[22m in your config.
       • If you need a custom transformation specify a [1m"transform"[22m option in your config.
       • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the [1m"moduleNameMapper"[22m config option.
      You'll find more details and examples of these config options in the docs:
      [36mhttps://jestjs.io/docs/en/configuration.html[39m
      [1m[31mDetails:[39m[22m
      [0m [90m 53 | [39m[36mvar[39m theftRisk [33m=[39m [36mnew[39m [33mRisk[39m([32m'Theft'[39m[33m,[39m [35m100[39m)[33m;[39m
       [90m 54 | [39m[36mvar[39m availableRisks [33m=[39m [fireRisk[33m,[39m theftRisk][33m;[39m
      [31m[1m>[22m[39m[90m 55 | [39m[36mvar[39m copmanyInstance [33m=[39m [36mnew[39m [33mInsuranceCompany[39m()[33m;[39m[33m=[39m
       [90m    | [39m                                             [31m[1m^[22m[39m
       [90m 56 | [39mcopmanyInstance[33m.[39msetAvailableRisks(availableRisks)[33m;[39m
       [90m 57 | [39m
       [90m 58 | [39m[36mvar[39m policyStartDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m [35m0[39m[33m,[39m [35m1[39m)[33m;[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m12.988s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^?[Knpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (11ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mstring[39m[2m).toContain([22m[32mvalue[39m[2m)[22m

    Expected string:
      [31m"Wed Jan 01 2020 00:00:00 GMT+0200 (EET)"[39m
    To contain value:
      [32m"2019-12-31"[39m
[2m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m [90m 79 | [39m	[36mvar[39m tillDate [33m=[39m [36mnew[39m [33mDate[39m([35m2019[39m[33m,[39m[35m11[39m[33m,[39m[35m31[39m)[33m;[39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 80 | [39m	expect(policy[33m.[39mvalidTill[33m.[39mtoString())[33m.[39mtoContain([32m'2019-12-31'[39m)[33m;[39m [90m//will compare two strings to avoid native js one day off bug[39m[0m[22m
[2m    [0m [90m    | [39m	                                    [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 81 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toContain ([2m[0m[36mscript.test.js[39m[0m[2m:80:38)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        2.205s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m ([0m[1m[41m6.589s[49m[22m[0m)

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mstring[39m[2m).toContain([22m[32mvalue[39m[2m)[22m

    Expected string:
      [31m"1577743200000"[39m
    To contain value:
      [32m"2019-12-31"[39m
[2m[22m
[2m    [0m [90m 77 | [39m[0m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 79 | [39m	expect(policy[33m.[39mvalidTill[33m.[39mtoString())[33m.[39mtoContain([32m'2019-12-31'[39m)[33m;[39m [90m//will compare two strings instead of Date objects to avoid native js 'one day off' bug[39m[0m[22m
[2m    [0m [90m    | [39m	                                    [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 80 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toContain ([2m[0m[36mscript.test.js[39m[0m[2m:79:38)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m14.993s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [1m● [22mTest suite failed to run

    /home/igor/Desktop/insurance/script.js: Unexpected token, expected , (102:43)

      [0m [90m 100 | [39m			[36mvar[39m from [33m=[39m [36mnew[39m [33mDate[39m([36mthis[39m[33m.[39m_validFrom)[33m;[39m
       [90m 101 | [39m			[36mvar[39m b [33m=[39m [36mnew[39m [33mDate[39m(from[33m.[39msetMonth(from[33m.[39mgetMonth()[33m+[39m[36mthis[39m[33m.[39m_validMonths))[33m;[39m
      [31m[1m>[22m[39m[90m 102 | [39m			[36mreturn[39m [36mnew[39m [33mDate[39m(b[33m.[39msetDate(b[33m.[39mgetDate()[33m-[39m[35m1[39m)[33m;[39m
       [90m     | [39m			                                        [31m[1m^[22m[39m
       [90m 103 | [39m		}
       [90m 104 | [39m
       [90m 105 | [39m		[90m// Get total price of the policy. Calculate by summing up all insured risks.[39m[0m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m0 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.141s, estimated 7s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (10ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mstring[39m[2m).toContain([22m[32mvalue[39m[2m)[22m

    Expected string:
      [31m"Tue Dec 31 2019 00:00:00 GMT+0200 (EET)"[39m
    To contain value:
      [32m"2019-12-31"[39m
[2m[22m
[2m    [0m [90m 77 | [39m[0m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 79 | [39m	expect(policy[33m.[39mvalidTill[33m.[39mtoString())[33m.[39mtoContain([32m'2019-12-31'[39m)[33m;[39m [90m//will compare two strings instead of Date objects to avoid native js 'one day off' bug[39m[0m[22m
[2m    [0m [90m    | [39m	                                    [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 80 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toContain ([2m[0m[36mscript.test.js[39m[0m[2m:79:38)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.378s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid till Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m11 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.373s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (31ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mstring[39m[2m).toContain([22m[32mvalue[39m[2m)[22m

    Expected string:
      [31m"Sat Nov 30 2019 00:00:00 GMT+0200 (EET)"[39m
    To contain value:
      [32m"Dec 31 2019"[39m
[2m[22m
[2m    [0m [90m 77 | [39m[0m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 79 | [39m	expect(policy[33m.[39mvalidTill[33m.[39mtoString())[33m.[39mtoContain([32m'Dec 31 2019'[39m)[33m;[39m [90m//will compare two strings instead of Date objects to avoid native js 'one day off' bug[39m[0m[22m
[2m    [0m [90m    | [39m	                                    [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 80 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toContain ([2m[0m[36mscript.test.js[39m[0m[2m:79:38)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.433s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[A
^C
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (11ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mstring[39m[2m).toContain([22m[32mvalue[39m[2m)[22m

    Expected string:
      [31m"Fri Jan 31 2020 00:00:00 GMT+0200 (EET)"[39m
    To contain value:
      [32m"Dec 31 2019"[39m
[2m[22m
[2m    [0m [90m 77 | [39m[0m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 79 | [39m	expect(policy[33m.[39mvalidTill[33m.[39mtoString())[33m.[39mtoContain([32m'Dec 31 2019'[39m)[33m;[39m [90m//will compare two strings instead of Date objects to avoid native js 'one day off' bug[39m[0m[22m
[2m    [0m [90m    | [39m	                                    [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 80 | [39m})[0m[22m
[2m[22m
[2m      [2mat Object.toContain ([2m[0m[36mscript.test.js[39m[0m[2m:79:38)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m10 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m7.56s[39m[22m
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (4ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid till Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m12 passed[39m[22m, 12 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.342s, estimated 3s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (12ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    ReferenceError: from is not defined
[2m[22m
[2m    [0m [90m  99 | [39m[0m[22m
[2m    [0m [90m 100 | [39m[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 101 | [39m			[36mvar[39m b [33m=[39m [36mnew[39m [33mDate[39m([36mthis[39m[33m.[39m_validFrom[33m.[39msetMonth(from[33m.[39mgetMonth()[33m+[39m[36mthis[39m[33m.[39m_validMonths))[33m;[39m[0m[22m
[2m    [0m [90m     | [39m			                                          [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 102 | [39m			[36mreturn[39m [36mnew[39m [33mDate[39m(b[33m.[39msetDate(b[33m.[39mgetDate()[33m-[39m[35m1[39m))[33m;[39m[0m[22m
[2m    [0m [90m 103 | [39m		}[0m[22m
[2m    [0m [90m 104 | [39m[0m[22m
[2m[22m
[2m      [2mat Policy.from [as validTill] ([2m[0m[36mscript.js[39m[0m[2m:101:46)[2m[22m
[2m      [2mat Object.validTill ([2m[0m[36mscript.test.js[39m[0m[2m:79:16)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m11 passed[39m[22m, 12 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.366s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid till Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m12 passed[39m[22m, 12 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.321s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid till Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m12 passed[39m[22m, 12 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        [1m[33m8.629s[39m[22m
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[A
[A: command not found
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ^[[Anpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid till Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m12 passed[39m[22m, 12 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.304s, estimated 5s
[2mRan all test suites[22m[2m.[22m
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ 
]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ ~[Knpm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[31m FAIL [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [31m✕[39m [2mpolicy get valid till Date (29ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[1m[31m  [1m● [1mpolicy get valid till Date[39m[22m

    [2mexpect([22m[31mstring[39m[2m).toContain([22m[32mvalue[39m[2m)[22m

    Expected string:
      [31m"Sat Nov 30 2019 00:00:00 GMT+0200 (EET)"[39m
    To contain value:
      [32m"Dec 31 2019"[39m
[2m[22m
[2m    [0m [90m 77 | [39m[0m[22m
[2m    [0m [90m 78 | [39mtest([32m'policy get valid till Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m    [0m[31m[1m>[2m[39m[90m 79 | [39m	expect(policy[33m.[39mvalidTill[33m.[39mtoString())[33m.[39mtoContain([32m'Dec 31 2019'[39m)[33m;[39m [90m//will compare two strings instead of Date objects to avoid native js 'one day off' bug[39m[0m[22m
[2m    [0m [90m    | [39m	                                    [31m[1m^[2m[39m[0m[22m
[2m    [0m [90m 80 | [39m})[0m[22m
[2m    [0m [90m 81 | [39m[0m[22m
[2m    [0m [90m 82 | [39mtest([32m'policy get valid from Date'[39m[33m,[39m() [33m=>[39m {[0m[22m
[2m[22m
[2m      [2mat Object.toContain ([2m[0m[36mscript.test.js[39m[0m[2m:79:38)[2m[22m


[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[31m1 failed[39m[22m, 1 total
[1mTests:       [22m[1m[31m1 failed[39m[22m, [1m[32m11 passed[39m[22m, 12 total
[1mSnapshots:   [22m0 total
[1mTime:[22m        1.64s
[2mRan all test suites[22m[2m.[22m
[37;40mnpm[0m [0m[31;40mERR![0m[35m[0m Test failed.  See above for more details.
[0m]0;igor@igor-HP-ProBook-450-G1: ~/Desktop/insuranceigor@igor-HP-ProBook-450-G1:~/Desktop/insurance$ npm test

> insurance@1.0.0 test /home/igor/Desktop/insurance
> jest

[1m[2mDetermining test suites to run...[1m[22m[999D[K
[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[0m[7m[1m[32m PASS [39m[22m[27m[0m [2m./[22m[1mscript.test.js[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany set name (5ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mcompany get name (2ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk construct[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mrisk get yearly price[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mset available risks (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mget available risks[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2msell policy (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get object name (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid from Date[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A  [32m✓[39m [2mpolicy get valid till Date (1ms)[22m

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A

[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A
[0m[7m[33m[1m RUNS [22m[39m[27m[0m [2m./[22m[1mscript.test.js[22m
[K[1A[K[1A[999D[K[1mTest Suites: [22m[1m[32m1 passed[39m[22m, 1 total
[1mTests:       [22m[1m[32m11 passed[39m[22m, 11 total
[1mSnapshots:   [22m0 total
[1mTime:[22m   